package day12.practice;

public class VocabularyNoteEx {

	public static void main(String[] args) {
		Word word1 = new Word("Vocabulary", "The words that make up a language.");
		word1.addMeaning("A");
		word1.print();
		word1.addMeaning("B");
		word1.addMeaning("C");
		word1.addMeaning("D");
		word1.print();
		word1.addMeaning("E");
		word1.print();
		word1.removeMeaning(4);
		word1.print();
	}

}

/* 한 단어를 관리하는 클래스
 *  - 단어
 *  - 뜻들
* */
class Word {
	//멤버 변수
	private String title;
	private String meaning[];
	private int meaningCount;
	//생성자
	public Word(String title, String meaning) {
		this.title = title;
		this.meaning = new String[5];//기본 5개
		this.meaning[0] = meaning;
		meaningCount++;
	}
	public Word(String title) {
		this.title = title;
		this.meaning = new String[5];
	}
	//메서드
	/**단어와 뜻을 출력하는 메서드
	 * 
	 */
	public void print() {
		System.out.println("=================");
		System.out.println("Word : " + title);
		System.out.println("meaning : ");
		for(int i = 0; i < meaningCount; i++) {
				System.out.println(i + 1 + ". " + meaning[i]);
			}
		System.out.println("=================");
	}
	
	/**뜻을 추가하는 메소드
	 * 매개변수 :
	 * 리턴타입 :
	 * 메서드명 :
	 */
	public void addMeaning(String meaning) {
		if(meaningCount == this.meaning.length) {
			System.out.println("The word's meaning list is full!");
			return;
		}
		this.meaning[meaningCount] = meaning;
		meaningCount++;
	}
	
	public void removeMeaning(int num) {
		if(num > meaningCount || num < 1) {
			System.out.println("Out of meaning list!");
			return;
		}
		for(int i = num - 1; i < meaningCount - 1; i++) {
			meaning[i] = meaning[i + 1];
		}
		meaningCount--;
	}
}